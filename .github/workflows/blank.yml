# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  changedFiles:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      pu: ${{ steps.changes.outputs.puml }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Runs a single command using the runners shell
      - name: Get changed UML files
          id: getfiles
          run: |
            git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{github.sha }} \
            | grep -e .pu$ -e .puml$
            | awk -F ' ' '{
              # ensure we are not trying to process deleted files
              # only process puml files
              # do not try to process our theme or custom config
              if ( $1 !~ /^delete$/ && $4 ~ /\.puml$/ && $4 !~ /(theme|config)\.puml$/ )
              {
                # only print the file name and strip newlines for spaces
                printf "::set-output name=puml::" "%s ", $4
              }
            }
            END { print "" } # ensure we do print a newline at the end
            '
            
      - name: UML files considered echo output
        run: echo ${{ steps.getfiles.outputs.puml }}
      - name: Generate PNG Diagrams
        uses: cloudbees/plantuml-github-action@master
        with:
          args: -v -tpng ${{ steps.getfiles.outputs.puml }}
      - name: git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Commit files
        run: |
          git add .
          git commit -m "Auto Generated UML files" -a
          git pull
          git push origin ${{github.head_ref}}
